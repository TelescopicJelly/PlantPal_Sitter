{"ast":null,"code":"var _jsxFileName = \"/Users/samarioglesby/Downloads/PlantPal_Sitter/plant-app/src/Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n  // Stores the values of email and password the user types in\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [name, setName] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(email);\n    console.log(pass);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"full-name\",\n      children: \"Full Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"name\",\n      placeholder: \"FullName\",\n      id: \"name\",\n      name: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"youremail@gmail.com\",\n      id: \"email\",\n      name: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"***********\",\n      id: \"password\",\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"mk7hPml8ZmrsK0kHhP3rpAV+8Hk=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","email","setEmail","pass","setPass","name","setName","handleSubmit","e","preventDefault","console","log","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","id","_c","$RefreshReg$"],"sources":["/Users/samarioglesby/Downloads/PlantPal_Sitter/plant-app/src/Register.jsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nexport const Register = () => {\n\n    // Stores the values of email and password the user types in\n    const [email, setEmail ] = useState('');\n    const [pass, setPass ] = useState('');\n    const [name, setName] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(email);\n        console.log(pass)\n\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"full-name\">Full Name</label>\n            <input type=\"name\" placeholder=\"FullName\" id=\"name\" name=\"name\"></input>\n            \n            <label htmlFor=\"email\">Email:</label>\n            <input type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" ></input>\n            \n            <label htmlFor=\"password\">Password:</label>\n            <input type=\"password\" placeholder=\"***********\" id=\"password\" name=\"password\" ></input>\n        </form>\n    )\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAE,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;IAClBS,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EAErB,CAAC;EACD,oBACIL,OAAA;IAAMc,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBACzBf,OAAA;MAAOgB,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5CpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,EAAE,EAAC,MAAM;MAAChB,IAAI,EAAC;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExEpB,OAAA;MAAOgB,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrCpB,OAAA;MAAOqB,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC,qBAAqB;MAACC,EAAE,EAAC,OAAO;MAAChB,IAAI,EAAC;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEvFpB,OAAA;MAAOgB,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3CpB,OAAA;MAAOqB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,aAAa;MAACC,EAAE,EAAC,UAAU;MAAChB,IAAI,EAAC;IAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAGf,CAAC;AAAAlB,EAAA,CA1BYD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}